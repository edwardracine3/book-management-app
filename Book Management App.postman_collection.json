{
	"info": {
		"_postman_id": "01f0f0d1-e0df-4fe5-8261-d533b60cf0f6",
		"name": "Book Management App",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8276901",
		"_collection_link": ""
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extract the token from the response and add it to environment variables\r",
									"pm.test(\"Extract token from the response and add it to environment variables\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.have.property('token');\r",
									"    \r",
									"    var token = responseJson.token;\r",
									"    pm.environment.set(\"authToken\", token);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"edward racine\",\r\n    \"password\" : \"password123@\",\r\n    \"email\" : \"edwardracine3@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/register",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extract the token from the response and add it to environment variables\r",
									"pm.test(\"Extract token from the response and add it to environment variables\", function () {\r",
									"    var responseJson = pm.response.json();\r",
									"    pm.expect(responseJson).to.have.property('token');\r",
									"    \r",
									"    var token = responseJson.token;\r",
									"    pm.environment.set(\"authToken\", token);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"edwardracine3@gmail.com\",\r\n    \"password\": \"password123@\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/auth/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extract and store _id, email, and name in environment variables\r",
									"pm.test(\"Extract _id, email, and name and store in environment variables\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.have.property('_id').and.to.be.a('string');\r",
									"    pm.expect(responseData).to.have.property('email').and.to.be.a('string');\r",
									"    pm.expect(responseData).to.have.property('name').and.to.be.a('string');\r",
									"\r",
									"    pm.environment.set(\"userId\", responseData._id);\r",
									"    pm.environment.set(\"email\", responseData.email);\r",
									"    pm.environment.set(\"name\", responseData.name);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/auth/profile",
							"host": [
								"{{host}}"
							],
							"path": [
								"auth",
								"profile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Booking",
			"item": [
				{
					"name": "Create Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extract the _id from the response and store it in an environment variable as bookid\r",
									"pm.test(\"Extract _id from the response and store it in an environment variable as bookid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"bookid\", jsonData._id);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"The Great Gatsby\",\r\n  \"author\": \"F. Scott Fitzgerald\",\r\n  \"description\": \"A novel about the American Dream\",\r\n  \"publishedYear\": 1925,\r\n  \"genre\": \"Fiction\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/books",
							"host": [
								"{{host}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract and set the first _id as bookId in the environment\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.environment.set(\"bookId\", responseData[0]._id);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/books",
							"host": [
								"{{host}}"
							],
							"path": [
								"books"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single books",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/books/:bookId",
							"host": [
								"{{host}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"variable": [
								{
									"key": "bookId",
									"value": "{{bookId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Books",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Updated Title\",\r\n  \"description\": \"Updated description\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/books/:bookId",
							"host": [
								"{{host}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"variable": [
								{
									"key": "bookId",
									"value": "{{bookId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Books",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Updated Title\",\r\n  \"description\": \"Updated description\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/books/:bookId",
							"host": [
								"{{host}}"
							],
							"path": [
								"books",
								":bookId"
							],
							"variable": [
								{
									"key": "bookId",
									"value": "{{bookId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}